@using Tools
<div id="fb-root"></div>
<script type="text/javascript">
	window.fbAsyncInit = function () {
		FB.init({
			appId: @Tools.Utils.WebConfig.Get.FbAppId,
			status: true, // check login status
			cookie: true, // enable cookies to allow the server to access the session
			xfbml: true, // parse XFBML,
			channelUrl : '@Tools.UrlHelperSb.ContentAbsolute("~/channel.html")'
		});
		SizeManagement(500);
		
			
	};
	(function (d) {
		var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
		if (d.getElementById(id)) { return; }
		js = d.createElement('script'); js.id = id; js.async = true;
		js.src = "//connect.facebook.net/fr_FR/all.js";
		ref.parentNode.insertBefore(js, ref);
	} (document));

	function SizeManagement(forcedMinHeight)
	{
		var offset = 50;
		var calculatedheight = forcedMinHeight + offset;
			
		FB.Canvas.setSize({height: calculatedheight});

		setTimeout("FB.Canvas.setAutoGrow();FB.Canvas.scrollTo(0,0);",350);
	}




	
	function postFbData(fbAuthResponse, callbackOkUrl)
	{
			// à utiliser dans ce context : 
			// $("#btdecouvrejeu a, #btjejoue a").click(function () {
			// 	FB.getLoginStatus(function (response)
			// 	{
			// 		if (response.status === 'connected')
			// 		{
			// 			if (response.authResponse)
			// 			{
			// 				postFbData(response.authResponse, "@Url.Action("Question")");
			// 			}
			// 		}
			// 		else if (response.status == 'not_authorized')
			// 		{
			// 			FB.login(function (response)
			// 			{
			// 				if (response.authResponse)
			// 				{
			// 					postFbData(response.authResponse, "@Url.Action("Question")");
			// 				}
			// 				else { }
			// 			}, { scope: 'user_location,user_hometown,email' });
			// 		}
			// 	});
			// });




		var token = response.authResponse.accessToken, userid = response.authResponse.userID;
		FB.api('/me', function (response)
		{
			$.ajax({
				type: "POST",
				contentType: "application/json; charset=utf-8",
				url: "Fb/SetUser",
				data: "{token:'" + token + "'}",
				dataType: "json",
				success: function (data)
				{
					if (data.result == "true") { window.location.href = callbackOkUrl; }
					else { }
				},
				error: function (XMLHttpRequest, textStatus, errorThrown) { }
			});
		});
	}

@*
/////////////////////////////////////////////////////////////////////////////
////////////`|``___|`|`|`|`\`|`|/`___|_```_|_`_/`_`\|`\`|`/`___|`////////////
////////////`|`|_``|`|`|`|``\|`|`|`````|`|``|`|`|`|`|``\|`\___`\`////////////
////////////`|``_|`|`|_|`|`|\``|`|___``|`|``|`|`|_|`|`|\``|___)`|////////////
////////////`|_|````\___/|_|`\_|\____|`|_|`|___\___/|_|`\_|____/`////////////
/////////////////////////////////////////////////////////////////////////////

	
	function Fb_loginfb(scopeList, callback)
	{
		if ('undefined' == typeof callback) 
		{ 
			callback = function() {} 
		}
		FB.login(function(response) 
		{
			callback.call(null, response);
		}, 
		//{ scope: 'email' }
		{ scope: scopeList}
		);
	}


	

	function Fb_getUserData(callback)
	{
		if ('undefined' == typeof callback) 
		{ 
			callback = function() {} 
		}
		FB.api('/me', function(response)
		{	
			callback.call(null, response);
		});
	}

	function Fb_getLinkLikes(urls, callback)
	{
		//console.log(urls);
		if ('undefined' == typeof callback) 
		{ 
			callback = function() {} 
		}
		var result;
		FB.api(
		  {
			method: 'links.getStats',
			urls: urls
		  },
		  function(response) {
			var stats = response;
			//console.dir(stats);
			callback.call(null, stats); 
		  }
		);
		return result;
	}
*@

</script>